#include "tgx.h"

using namespace tgx;

// 每个facelet所在的的cubelet所对应cubeletPosition的索引
// 顺序为URFDLB
uint8_t cubeFacelets[6][9] = {
        {8,  17, 26, 5,  14, 23, 2,  11, 20},
        {20, 23, 26, 19, 22, 25, 18, 21, 24},
        {2,  11, 20, 1,  10, 19, 0,  9,  18},
        {0,  9,  18, 3,  12, 21, 6,  15, 24},
        {8,  5,  2,  7,  4,  1,  6,  3,  0},
        {26, 17, 8,  25, 16, 7,  24, 15, 6}
};


RGB565 colors[6] = {
        RGB565_Yellow, RGB565_White, RGB565_Red, RGB565_Blue, RGB565_Green, RGB565_Orange
};

// 魔方27的cubelet对应的位置坐标。
const fVec3 cubeletPosition[3][3][3] = {
        {
                {
                        {-1, -1, -1}, {-1, -1, 0}, {-1, -1, 1}
                },
                {
                        {-1, 0, -1}, {-1, 0, 0}, {-1, 0, 1}
                },
                {
                        {-1, 1, -1}, {-1, 1, 0}, {-1, 1, 1}
                }
        },
        {
                {
                        {0,  -1, -1}, {0,  -1, 0}, {0,  -1, 1}
                },
                {
                        {0,  0, -1}, {0,  0, 0}, {0,  0, 1}
                },
                {
                        {0,  1, -1}, {0,  1, 0}, {0,  1, 1}
                }
        },
        {
                {
                        {1,  -1, -1}, {1,  -1, 0}, {1,  -1, 1}
                },
                {
                        {1,  0, -1}, {1,  0, 0}, {1,  0, 1}
                },
                {
                        {1,  1, -1}, {1,  1, 0}, {1,  1, 1}
                }
        }
};


// 一个普通立方体的的8个顶点
const tgx::fVec3 GENERAL_CUBE_POINT[8] =
        {
                {-1, 1,  1},
                {-1, -1, 1},
                {1,  -1, 1},
                {1,  1,  1},
                {1,  1,  -1},
                {1,  -1, -1},
                {-1, -1, -1},
                {-1, 1,  -1}
        };
// 一个立方体的六个面，每面上的四个点，用这4顶点画正方形，6个正方形组成立方体
const uint16_t GENERAL_CUBE_FACES[6 * 4] =
        {
                0, 1, 2, 3,
                3, 2, 5, 4,
                1, 6, 5, 2,
                4, 5, 6, 7,
                7, 6, 1, 0,
                7, 0, 3, 4,
        };